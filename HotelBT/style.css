* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

body {
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    line-height: 1.7em;
    }

a {
    color: #333;
    text-decoration: none;
}

h1, h2, h3 {
    padding-bottom: 20px;
}

p {
    margin: 10px 0;
}

/* Utilities */
/* Having utility classes are very useful. We can style multiple elements by giving it the class name rather than styling each element individually */

/* at 1100px, the items inside of the container will move towards the middle of the page, which is margin:auto */
.container {
    margin: auto;
    max-width: 1100px;
    overflow: auto; /* background is always shown, page is never larger than background */
    padding: 0 20px; /* moved items a bit away from edges */
}

/* all items on the page with this classname will share the same attributes */
.text-primary {
    color: #f7c08a; 
}

.lead {
    font-size: 20px;    
}

/* same styling on all buttons by using this class name */
.btn {
  display: inline-block; /* takes up the entire container but not the entire width */
  font-size: 18px;
  color: #fff;
  background: #333;
  padding: 13px 20px;
  border-radius: 5px;
  cursor: pointer;
}

/* This button will have all of the same traits as the button class above but change the details we have below */
.btn-light {
  color: #333;
  background: #f4f4f4;
}

.bg-dark {
  background: #333;
  color: #fff;
}

.bg-light {
  background: #f4f4f4;
  color: #333;
}

.bg-primary {
  background: #f7c08a;
  color: #333;
}

/* this is a clear class, only necessary when we use floats. usually added in the html between the sections or they will run into each other, line 79*/
.clr {
  clear: both;
}

/* Padding utility class. can be used anywhere by adding the classname on the div*/
/* padding on the y axis (top and bottom) */
.py-1 {padding: 10px 0;}
.py-2 {padding: 20px 0;}
.py-3 {padding: 30px 0;}

/* large heading utility */
.l-heading {
  font-size: 40px;
  line-height: 1.2;
}

/* NavBar */
#navbar {
    background: #333;
    color: #fff;
 /* background shows no matter what */
    overflow: auto;
    
}

#navbar a {
    color: #fff;
}

/* using floats to achieve horizontal setups. Using css grid or flexbox is much easier, this is just an example using the older way of floats */
#navbar h1 {
    float: left;
    padding-top: 20px;
}

#navbar ul {
    float: right;
    list-style: none;
}

/* the ul itself was floated to the right above. now we want to float the li's in this ul to the left to make them line up horizontally */
#navbar ul li {
    float: left;
}

/* we want to diplay the a tags as block elements so they can create their own containers allowing us to edit things like padding */
#navbar ul li a {
    display: block;
    padding: 20px;
    text-align: center;
}
#navbar ul li a:hover, 
#navbar ul li a.current  {
    background: #444;
    color: #f7c08a;
}

/* SHOWCase */
#showcase {
    background: url(img/showcase.jpg) no-repeat center center/cover;
    height: 600px; 
}

#showcase .showcase-content {
    color: #fff;
    text-align: center;
    padding-top: 170px;;
}

#showcase .showcase-content h1 {
    font-size: 60px;
    line-height: 1.2em;
}

#showcase .showcase-content p {/* creating space between the p and the a button */
  line-height: 1.7em;
  padding-bottom: 20px;
}

.btn:hover {
  background: #f7c08a;
  color: #333;
}

/* HOME Info */
/* first things first, target the section with an ID and give it a height and the space it will take up on the document */
#home-info {
  height: 475px;
}

/* when adding a background img, be sure to specify how much of the containers width and height you want to take up with the image */
#home-info .info-img {
  float: left;
  background: url(./img/photo-1.jpg) no-repeat;
  width: 50%;
  min-height: 100%;
}

#home-info .info-content {
  float: right;
  width: 50%;
  height: 100%;
  text-align: center;
  padding: 50px 30px;
  overflow: hidden; /* this makes sure that all the info stays in the container without creating scroll bars */
}

#home-info .info-content p {
  padding-bottom: 30px;
}

/* Features */
.box {
  float: left;
  width: 33.3%;
  padding: 50px;
  text-align: center;
}

.box i {
  margin-bottom: 10px;
}

/* ABOUT.html */
/* specify the containers details first */
#about-info .info-right {
  float: right;
  width: 50%;
  min-height: 100%;
}

/* then target & specify how the img will fit within that container */
#about-info .info-right img {
  display: block;
  margin: auto;
  width: 70%;
  border-radius: 50%;
}

#about-info .info-left {
  float: left;  
  width: 50%;
  min-height: 100%;
}

/* Testimonial Section */
#testimonials {
  height: 100%;
  background: url(./img/test-bg.jpg) no-repeat center center/cover;
  padding-top: 100px;
}
 /* now to resize and style the images */
 #testimonials .testimonial img{
   width: 100px; /* shrunk image size */
   float: left; /* float to the side of the p */
   margin-right: 20px; /* space between the image & p */
   border-radius: 50%; /* completely round */
 }

 #testimonials h2 {
   color: #fff;
   text-align: center;
   padding-bottom: 40px;
 }

 #testimonials .testimonial {
   padding: 20px;
   margin-bottom: 40px; /* seperated the two .testimonial containers from one another */
   border-radius: 5px;
   opacity: 0.8; /* faded the divs away slightly */
 }

 .testimonial {
   height: 140px;
 }
 
 /* Contact Form */
 #contact-form .form-group {
   margin-bottom: 20px; /* seperate each form input */
 }

 #contact-form label {
   display: block; /* put the labels and inputs on different lines */
   margin-bottom: 5px; /* space between the label and the form */
 }

 #contact-form input, 
 #contact-form textarea {
   width: 100%;
   padding: 10px;
   border: 1px solid #ddd;
 }
 #contact-form textarea {
   height: 200px;
 }

 /* added on psuedo-selector of :focus. Works like a hover state but changes when u click on an element. The color thats surrounding the element */
 #contact-form input:focus, 
 #contact-form textarea:focus {
   outline: none;
   border-color: #f7c08a;
 }

/* Footer */
#main-footer {
  text-align: center;
  background: #444;
  color: #fff;
  padding: 20px;
}